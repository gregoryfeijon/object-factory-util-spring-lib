name: CI - Develop Pipeline

on:
  push:
    branches:
      - develop

jobs:
  build-test-analyze:
    name: Build, Test, Analyze (Sonar + Semgrep + OWASP)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache do Maven
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build e Testes
        run: mvn clean verify --batch-mode

      - name: Análise no SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar -Dsonar.projectKey=gregoryfeijon_object-factory-util-spring-lib -Dsonar.organization=gregory-feijon -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN

      - name: Instalar Semgrep
        run: pip install semgrep

      - name: Rodar Semgrep
        run: semgrep --config .semgrep.yaml

      - name: Instalar OWASP Dependency-Check
        run: |
          curl -L -o dependency-check.zip https://github.com/jeremylong/DependencyCheck/releases/download/v9.0.9/dependency-check-9.0.9-release.zip
          unzip dependency-check.zip -d dependency-check

#      - name: Rodar OWASP Dependency-Check
#        run: |
#          ./dependency-check/dependency-check/bin/dependency-check.sh --project "Lib Project" --scan . --format ALL --failOnCVSS 7

#      TEMPORÁRIO, ATÉ CONSEGUIR API KEY DO NVD
      - name: Rodar OWASP Dependency-Check offline
        run: |
          ./dependency-check/dependency-check/bin/dependency-check.sh --noupdate --project "Meu Projeto" --scan . --format ALL

      - name: Upload Relatório OWASP (HTML)
        uses: actions/upload-artifact@v4
        with:
          name: owasp-report
          path: dependency-check-report.html